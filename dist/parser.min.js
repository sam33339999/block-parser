function parseJsonToHtml(e){if(!e||!e.document||!Array.isArray(e.document.blocks))return console.error("Invalid JSON document structure"),"<p>Error: Invalid JSON document structure</p>";let a="";return e.document.blocks.forEach((e=>{switch(e.type){case"heading":a+=handleHeading(e.data);break;case"paragraph":a+=handleParagraph(e.data);break;case"code":a+=handleCode(e.data);break;case"mermaid":a+=handleMermaid(e.data);break;case"table":a+=handleTable(e.data);break;case"layoutColumns":a+=handleLayoutColumns(e.data);break;case"image":a+=handleImage(e.data);break;case"anchorLink":a+=handleAnchorLink(e.data);break;default:console.warn(`Unsupported block type: ${e.type}`)}})),a}function handleHeading(e){if(!e||!e.text||!e.level)return"";const a=Math.max(1,Math.min(6,parseInt(e.level,10))),r=e.anchorId?` id="${e.anchorId}"`:"";let n="";e.anchorId&&(n=` <a href="#${e.anchorId}" class="anchor-link" aria-label="Link to this section">#</a>`);return`<h${a}${r}>${e.text.replace(/[&<>\'\"/]/g,(function(e){return{"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&quot;","'":"&#39;","/":"&#x2F;"}[e]}))}${n}</h${a}>\n`}function handleParagraph(e){if(!e||"string"!=typeof e.text&&!Array.isArray(e.richText))return console.warn("Paragraph: Missing text or richText array."),"";let a="";if(Array.isArray(e.richText)&&e.richText.length>0)e.richText.forEach((e=>{if(!e||"string"!=typeof e.content)return void console.warn("Paragraph richText item: Invalid item or missing content string.",e);let r=escapeHtml(e.content);if(r=r.replace(/\[color:([^,\]]+),bgColor:([^,\]]+)\]([\s\S]*?)\[&#x2F;color\]/g,((e,a,r,n)=>`<span style="color: ${escapeHtml(a.trim())}; background-color: ${escapeHtml(r.trim())};">${n}</span>`)),r=r.replace(/\[color:([^,\]]+)\]([\s\S]*?)\[&#x2F;color\]/g,((e,a,r)=>`<span style="color: ${escapeHtml(a.trim())};">${r}</span>`)),r=r.replace(/\[bgColor:([^,\]]+)\]([\s\S]*?)\[&#x2F;bgColor\]/g,((e,a,r)=>`<span style="background-color: ${escapeHtml(a.trim())};">${r}</span>`)),r=r.replace(/\n/g,"<br>\n"),Array.isArray(e.marks)&&e.marks.forEach((e=>{"bold"===e?r=`<strong>${r}</strong>`:"italic"===e?r=`<em>${r}</em>`:"underline"===e?r=`<u>${r}</u>`:"code"===e&&(r=`<code>${r}</code>`)})),"link"===e.type&&e.href){const a=escapeHtml(e.href);r=`<a href="${a}" target="_blank" rel="noopener noreferrer">${r}</a>`}a+=r}));else{if("string"!=typeof e.text)return console.warn("Paragraph: No valid text or richText found."),"";{let r=e.text;console.log("[parser.js] handleParagraph - Original data.text:",r),r=escapeHtml(e.text),console.log("[parser.js] handleParagraph - After escapeHtml:",r),r=r.replace(/\[color:([^,\]]+),bgColor:([^,\]]+)\]([\s\S]*?)\[&#x2F;color\]/g,((e,a,r,n)=>{const t=`<span style="color: ${escapeHtml(a.trim())}; background-color: ${escapeHtml(r.trim())};">${n}</span>`;return console.log(`[parser.js] handleParagraph - Replacing color/bgColor tag: '${e}' with '${t}'`),t})),console.log("[parser.js] handleParagraph - After dual color/bgColor replace:",r),r=r.replace(/\[color:([^,\]]+)\]([\s\S]*?)\[&#x2F;color\]/g,((e,a,r)=>{const n=`<span style="color: ${escapeHtml(a.trim())};">${r}</span>`;return console.log(`[parser.js] handleParagraph - Replacing color tag: '${e}' with '${n}'`),n})),console.log("[parser.js] handleParagraph - After color replace:",r),r=r.replace(/\[bgColor:([^,\]]+)\]([\s\S]*?)\[&#x2F;bgColor\]/g,((e,a,r)=>{const n=`<span style="background-color: ${escapeHtml(a.trim())};">${r}</span>`;return console.log(`[parser.js] handleParagraph - Replacing bgColor tag: '${e}' with '${n}'`),n})),console.log("[parser.js] handleParagraph - After bgColor replace:",r);const n=r;r=r.replace(/\n/g,"<br>\n"),r!==n&&console.log("[parser.js] handleParagraph - After newline to <br> conversion:",r);const t=r;r=r.replace(/\*{4}([^*]+)\*{4}/g,"<strong>$1</strong>"),r!==t&&console.log("[parser.js] handleParagraph - After ****bold**** conversion:",r);const o=r;r=r.replace(/\*\*([^*]+)\*\*/g,"<strong>$1</strong>"),r!==o&&console.log("[parser.js] handleParagraph - After **bold** conversion:",r);const l=r;r=r.replace(/\*([^*]+)\*/g,"<em>$1</em>"),r!==l&&console.log("[parser.js] handleParagraph - After *italic* conversion:",r),a=r,console.log("[parser.js] handleParagraph - Final paragraphContent for data.text:",a)}}return`<p>${a}</p>\n`}function handleCode(e){if(!e||"string"!=typeof e.code)return"";return`<pre><code class="${e.language?`language-${e.language}`:"language-none"}">${e.code.replace(/[&<>\'\"/]/g,(function(e){return{"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&quot;","'":"&#39;","/":"&#x2F;"}[e]}))}</code></pre>\n`}function handleMermaid(e){if(!e||"string"!=typeof e.code)return"";return`<div class="mermaid">${e.code.replace(/[&<>\'\"/]/g,(function(e){return{"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&quot;","'":"&#39;","/":"&#x2F;"}[e]}))}</div>\n`}function handleTable(e){if(!e||!Array.isArray(e.headers)&&"boolean"!=typeof e.hasHeader||!Array.isArray(e.rows))return console.warn("Table: Invalid data structure. Missing headers/hasHeader or rows array."),"";let a="<table>\n";const r="boolean"==typeof e.hasHeader?e.hasHeader:Array.isArray(e.headers)&&e.headers.length>0;if(r&&Array.isArray(e.headers)&&e.headers.length>0&&(a+="  <thead>\n    <tr>\n",e.headers.forEach((e=>{let r="";"string"==typeof e?r=escapeHtml(e):e&&"string"==typeof e.text?r=escapeHtml(e.text):console.warn("Table header item: Invalid format.",e),a+=`      <th>${r}</th>\n`})),a+="    </tr>\n  </thead>\n"),Array.isArray(e.rows)&&e.rows.length>0)a+="  <tbody>\n",e.rows.forEach(((e,r)=>{Array.isArray(e)?(a+="    <tr>\n",e.forEach((e=>{let r="";"string"==typeof e?r=escapeHtml(e):e&&"string"==typeof e.text?r=escapeHtml(e.text):console.warn("Table cell item: Invalid format.",e),a+=`      <td>${r}</td>\n`})),a+="    </tr>\n"):console.warn(`Table row ${r}: Is not an array.`,e)})),a+="  </tbody>\n";else{const n=r&&Array.isArray(e.headers)&&e.headers.length>0?e.headers.length:1;a+=`  <tbody><tr><td colspan="${n>0?n:1}">No data available</td></tr></tbody>\n`}return a+="</table>\n",a}function handleLayoutColumns(e){if(!e||!e.columnCount||!Array.isArray(e.columns))return console.warn("LayoutColumns: Missing columnCount or columns array."),"";const a=parseInt(e.columnCount,10);if(isNaN(a)||a<=0)return console.warn("LayoutColumns: Invalid columnCount."),"";e.columns.length!==a&&console.warn(`LayoutColumns: data.columns.length (${e.columns.length}) does not match columnCount (${a}).`);let r="layout-columns gap-4",n="";if(e.distribution&&Array.isArray(e.distribution)&&e.distribution.length===a){const t=e=>"string"==typeof e&&""!==e.trim();e.distribution.every(t)?(r+=" grid",n=`grid-template-columns: ${e.distribution.join(" ")};`):(console.warn("LayoutColumns: Some distribution values are invalid. Falling back to equal columns."),r+=` grid grid-cols-${a}`)}else e.distribution&&console.warn("LayoutColumns: Distribution array is invalid or its length does not match columnCount. Falling back to equal columns."),r+=` grid grid-cols-${a}`;let t=`<div class="${r}" ${n?`style="${escapeHtml(n)}"`:""}>\n`;for(let r=0;r<a;r++){const a=e.columns[r];t+='  <div class="column">\n',Array.isArray(a)?a.forEach((e=>{if(e&&e.type&&e.data)switch(e.type){case"heading":t+=handleHeading(e.data);break;case"paragraph":t+=handleParagraph(e.data);break;case"code":t+=handleCode(e.data);break;case"mermaid":t+=handleMermaid(e.data);break;case"table":t+=handleTable(e.data);break;case"image":t+=handleImage(e.data);break;case"anchorLink":t+=handleAnchorLink(e.data);break;default:console.warn(`Unsupported block type in layout column: ${e.type}`)}else console.warn("Invalid block structure encountered within a layout column.")})):console.warn(`LayoutColumns: Data for column index ${r} is missing or not an array. Rendering an empty column.`),t+="  </div>\n"}return t+="</div>\n",t}function handleImage(e){if(!e||!e.url)return console.warn("Image: Missing URL."),"";return`<figure class="my-4"><img src="${escapeHtml(e.url)}" alt="${e.alt?escapeHtml(e.alt):""}" class="max-w-full h-auto rounded-md shadow-md mx-auto">${e.caption?`<figcaption class="text-sm text-center text-gray-500 mt-2">${escapeHtml(e.caption)}</figcaption>`:""}</figure>\n`}function handleAnchorLink(e){if(!e||"string"!=typeof e.text||"string"!=typeof e.href)return console.warn("AnchorLink: Missing text or href string."),"";const a=escapeHtml(e.text),r=escapeHtml(e.href);let n="",t="";return/^(https?:)?\/\//.test(e.href)&&(n=' target="_blank"',t=' rel="noopener noreferrer"'),`<p><a href="${r}"${n}${t}>${a}</a></p>\n`}function escapeHtml(e){return"string"!=typeof e?"":e.replace(/&/g,"&amp;").replace(/</g,"&lt;").replace(/>/g,"&gt;").replace(/"/g,"&quot;").replace(/'/g,"&#039;").replace(/\//g,"&#x2F;")}